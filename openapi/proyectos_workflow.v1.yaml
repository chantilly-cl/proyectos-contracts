openapi: 3.1.0
info:
  title: Proyectos Workflow API
  version: 1.0.0-alpha
  license:
    name: Proprietary – All rights reserved
    url: 'https://chantillyapps.cl/legal'
  description: |
    Contratos del MVP: Cotización → Aprobaciones (2C + 1F) → NV → OT. Reglas: PriceList LOCK por proyecto; FREEZE de precios al aprobar cotización (PriceAgreement).
servers:
  - url: 'https://proyectos-api.chantillyapps.cl'
    description: Producción
  - url: 'http://localhost:5087'
    description: Mock local (Prism)
paths:
  /v1/catalog/products:
    get:
      operationId: Catalog_ListProducts
      summary: Listar productos
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - name: q
          in: query
          description: Búsqueda por código o descripción
          schema:
            type: string
        - name: active
          in: query
          description: Filtra por productos activos/inactivos
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedProducts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Catalog
  /v1/catalog/products/{key}:
    get:
      operationId: Catalog_GetProduct
      summary: Obtener producto por clave
      parameters:
        - name: key
          in: path
          required: true
          description: Clave o SKU del producto
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Catalog
  /v1/catalog/products/{key}/config:
    get:
      operationId: Catalog_GetProductConfig
      summary: Obtener configuración del producto
      parameters:
        - name: key
          in: path
          required: true
          description: Clave o SKU del producto
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Catalog
  /me:
    get:
      operationId: Me_Get
      summary: Obtener perfil del usuario autenticado
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeProfile'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Identity
  /v1/price-lists:
    get:
      operationId: PriceLists_List
      summary: Listar listas de precio
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPriceLists'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - PriceLists
  /v1/projects:
    post:
      operationId: Projects_Create
      summary: Crear proyecto (LOCK PriceList)
      description: Crea el proyecto con PriceList asignado y bloqueado.
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '201':
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Conflicto (violación de regla de negocio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
  /v1/projects/{projectId}/price-list/assign:
    post:
      operationId: Projects_AssignPriceList
      summary: Asignar PriceList a proyecto
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignPriceListRequest'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
  /v1/projects/{projectId}/price-list/override:
    post:
      operationId: Projects_OverridePriceList
      summary: Sobrescribir PriceList de proyecto
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverridePriceListRequest'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
  '/v1/projects/{projectId}':
    get:
      operationId: Projects_Get
      summary: Obtener proyecto
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
    patch:
      operationId: Projects_Patch
      summary: Actualizar datos del proyecto
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchRequest'
      responses:
        '204':
          description: Actualizado
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
  /v1/projects/{projectId}/quotes:
    post:
      operationId: ProjectQuotes_Create
      summary: Crear cotización (draft) para un proyecto
      description: |
        Crea una cotización **versión 1** en estado `draft` para el `projectId` dado.
        Soporta **descuentos por ítem** y **descuento global** (XOR entre % y monto).
        Usa la PriceList **LOCK** del proyecto para resolver precios si `unitPrice` no se provee.
      tags: [Quotes, Projects]
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectQuoteCreateRequest'   # ⬅️ NUEVO
      responses:
        '201':
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '409': { $ref: '#/components/responses/Conflict' }
        '422': { $ref: '#/components/responses/UnprocessableEntity' }
        default: { $ref: '#/components/responses/Problem' }
  '/v1/projects/{projectId}/price-agreement':
    get:
      operationId: Projects_GetPriceAgreement
      summary: Ver acuerdo de precios FREEZE
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceAgreement'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Projects
  /v1/projects/{projectId}/approvals:
    get:
      operationId: Approvals_ListByProject
      summary: Listar aprobaciones de un proyecto
      parameters:
        - $ref: '#/components/parameters/ProjectId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Approvals
  '/v1/projects/{projectId}/approvals/{approvalId}':
    get:
      operationId: Approvals_GetByProject
      summary: Obtener aprobación de proyecto
      parameters:
        - $ref: '#/components/parameters/ProjectId'
        - name: approvalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Approvals
  /v1/projects/{projectId}/approvals/commercial:
    post:
      operationId: Approvals_ApproveCommercial
      summary: Registrar aprobación comercial
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Approvals
  /v1/projects/{projectId}/approvals/financial:
    post:
      operationId: Approvals_ApproveFinancial
      summary: Registrar aprobación financiera
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Approvals
  /v1/quotes:
    post:
      operationId: Quotes_Create
      summary: Crear cotización (versión 1)
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteCreateRequest'
      responses:
        '201':
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Quotes
  '/v1/quotes/{quoteId}':
    get:
      operationId: Quotes_Get
      summary: Obtener cotización
      parameters:
        - $ref: '#/components/parameters/QuoteId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Quotes
  '/v1/quotes/{quoteId}/submit':
    post:
      operationId: Quotes_Submit
      summary: Enviar a aprobación (genera versión)
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      responses:
        '202':
          description: Enviado a approvals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Quotes
  /v1/quotes/{quoteId}/items:
    post:
      operationId: QuoteItems_Add
      summary: Agregar ítem a cotización
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/QuoteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteItemCreate'
      responses:
        '201':
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteVersionSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Quotes
  /v1/quotes/{quoteId}/items/bulk:
    post:
      operationId: QuoteItems_AddBulk
      summary: Agregar ítems masivamente a cotización
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/QuoteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QuoteItemCreate'
      responses:
        '201':
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteVersionSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Quotes
  /v1/quotes/{quoteId}/send-email:
    post:
      operationId: Quotes_SendEmail
      summary: Enviar cotización por email (idempotente)
      description: |
        Envía la cotización al email del cliente del proyecto.
        Si la cotización estaba en `draft`, pasa a `sent`.
        Reintentos con la misma **Idempotency-Key** no duplican el envío.
      tags: [Quotes]
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/QuoteId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      responses:
        '202':
          description: Envío encolado/aceptado
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean, example: true }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '404': { $ref: '#/components/responses/NotFound' }
        '409': { $ref: '#/components/responses/Conflict' }
        '422': { $ref: '#/components/responses/UnprocessableEntity' }
        default: { $ref: '#/components/responses/Problem' }
  /v1/quotes/{quoteId}/pdf:
    get:
      operationId: Quotes_GetPdf
      summary: Obtener PDF de la cotización
      description: Devuelve el PDF; usar `?download=true` para forzar descarga.
      tags: [Quotes]
      parameters:
        - $ref: '#/components/parameters/QuoteId'
        - name: download
          in: query
          schema: { type: boolean, default: false }
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401': { $ref: '#/components/responses/Unauthorized' }
        '404': { $ref: '#/components/responses/NotFound' }
        default: { $ref: '#/components/responses/Problem' }
  '/v1/approvals/{approvalId}/decision':
    post:
      operationId: Approvals_Decide
      summary: 'Aprobar/Rechazar paso (C1, C2, F1)'
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
        - name: approvalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalDecision'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Approvals
  '/v1/projects/{projectId}/workflow/transition':
    post:
      operationId: Workflow_Transition
      summary: Hacer transición de estado (con guardias)
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTransitionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Guard failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - Workflow
  '/v1/projects/{projectId}/sales-notes':
    post:
      operationId: SalesNotes_Create
      summary: Emitir Nota de Venta (NV)
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      responses:
        '201':
          description: Creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesNote'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - SalesNotes
  '/v1/projects/{projectId}/work-orders':
    post:
      operationId: WorkOrders_Create
      summary: Emitir Orden de Trabajo (OT)
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/ProjectId'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
      responses:
        '201':
          description: Creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Problem'
      tags:
        - WorkOrders
  /v1/clients:
    get:
      operationId: Clients_List
      summary: Listar clientes (selector)
      tags: [Clients]
      parameters:
        - name: q
          in: query
          description: Búsqueda por nombre/RUT/email
          schema: { type: string }
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedClients'
        '401': { $ref: '#/components/responses/Unauthorized' }
        default: { $ref: '#/components/responses/Problem' }
  /v1/clients/{clientId}:
    get:
      operationId: Clients_Get
      summary: Obtener cliente
      tags: [Clients]
      parameters:
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Client' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '404': { $ref: '#/components/responses/NotFound' }
        default: { $ref: '#/components/responses/Problem' }
components:
  parameters:
    ClientId:
      name: clientId
      in: path
      required: true
      schema: { type: string, format: uuid }
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      schema:
        type: string
        maxLength: 64
      description: Clave idempotente por operación de escritura.
    Page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
    PageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        default: 50
        maximum: 200
        minimum: 1
    ProjectId:
      name: projectId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    QuoteId:
      name: quoteId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    XCorrelationId:
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        maxLength: 64
      description: ID de correlación devuelto/encadenado por los servicios.
    XRequestId:
      name: X-Request-Id
      in: header
      required: false
      schema:
        type: string
        maxLength: 64
      description: ID generado por el cliente para trazar la petición extremo a extremo.
  schemas:
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type:
            - string
            - 'null'
          format: email
        rut:
          type:
            - string
            - 'null'
        phones:
          type:
            - array
            - 'null'
          items:
            type: string
        billingAddress:
          type:
            - string
            - 'null'
      required:
        - id
        - name
    PagedClients:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
      required:
        - items
        - page
        - pageSize
        - total
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - title
        - status
    Money:
      type: object
      properties:
        currency:
          type: string
          example: CLP
        amount:
          description: Monto en enteros (céntimos o pesos)
          type: integer
      required:
        - currency
        - amount
    Product:
      type: object
      properties:
        sku:
          type: string
        title:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        codUmed:
          type:
            - string
            - 'null'
        inventariable:
          type:
            - integer
            - 'null'
        price:
          type: number
          format: double
        compareAtPrice:
          type: number
          format: double
        discount:
          type: number
          format: double
        discountedAmount:
          type: number
          format: double
        stock:
          type: number
          format: double
        costoPromedio:
          type: number
          format: double
        margen:
          type: number
          format: double
      required:
        - sku
        - price
        - compareAtPrice
        - discount
        - discountedAmount
        - stock
        - costoPromedio
        - margen
    ProductListItem:
      type: object
      properties:
        id:
          type: string
        sku:
          type: string
        name:
          type: string
        uom:
          type:
            - string
            - 'null'
      required:
        - id
        - sku
        - name
    PagedProducts:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductListItem'
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
      required:
        - items
        - page
        - pageSize
        - total
    ProductConfig:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        unit:
          type:
            - string
            - 'null'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionDefinition'
      required:
        - key
        - name
        - options
    ProductOptionDefinition:
      type: object
      properties:
        key:
          type: string
        displayName:
          type: string
        type:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValue'
      required:
        - key
        - displayName
        - type
        - values
    ProductOptionValue:
      type: object
      properties:
        key:
          type: string
        displayName:
          type: string
      required:
        - key
        - displayName
    PriceList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        name:
          type: string
        active:
          type: boolean
        source:
          type: string
      required:
        - id
        - key
        - name
        - active
        - source
    PagedPriceLists:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PriceList'
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
      required:
        - items
        - page
        - pageSize
        - total
    AssignPriceListRequest:
      type: object
      properties:
        priceListId:
          type: string
          format: uuid
      required:
        - priceListId
    OverridePriceListRequest:
      type: object
      properties:
        priceListId:
          type: string
          format: uuid
        currency:
          type:
            - string
            - 'null'
      required:
        - priceListId
    ProjectCreateRequest:
      type: object
      properties:
        code:
          type: string
        clientId:
          type: string
          format: uuid
        priceListId:
          type: string
          format: uuid
        installationAddressId:
          type:
            - string
            - 'null'
          format: uuid
      required:
        - code
        - clientId
        - priceListId
    ProjectPatchRequest:
      type: object
      properties:
        installationAddressId:
          type:
            - string
            - 'null'
          format: uuid
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        clientId:
          type: string
          format: uuid
        priceListId:
          type: string
          format: uuid
        installationAddressId:
          type:
            - string
            - 'null'
          format: uuid
        workflowState:
          $ref: '#/components/schemas/WorkflowState'
      required:
        - id
        - code
        - clientId
        - priceListId
        - workflowState
    ProjectQuoteCreateRequest:
      type: object
      properties:
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/QuoteItemInput'
        discountGlobalPercent:
          type:
            - number
            - 'null'
          format: double
          minimum: 0
          maximum: 100
        discountGlobalAmount:
          anyOf:
            - $ref: '#/components/schemas/Money'
            - type: 'null'
        notes:
          type:
            - string
            - 'null'
      required:
        - items
    QuoteItemInput:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: number
          format: double
          minimum: 0.000001
        unitPrice:
          anyOf:
            - $ref: '#/components/schemas/Money'
            - type: 'null'
        discountPercent:
          type:
            - number
            - 'null'
          format: double
          minimum: 0
          maximum: 100
        notes:
          type:
            - string
            - 'null'
      required:
        - productId
        - quantity
    QuoteCreateRequest:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuoteItemInput'
        notes:
          type:
            - string
            - 'null'
      required:
        - projectId
        - items
    QuoteItem:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: number
          format: double
        unitPrice:
          $ref: '#/components/schemas/Money'
        discountPercent:
          type: number
          format: double
        lineTotal:
          $ref: '#/components/schemas/Money'
      required:
        - productId
        - quantity
        - unitPrice
        - discountPercent
        - lineTotal
    Quote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        version:
          type: integer
        status:
          type: string
          enum:
            - draft
            - submitted
            - approved
            - rejected
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuoteItem'
        subtotal:
          $ref: '#/components/schemas/Money'
        taxes:
          $ref: '#/components/schemas/Money'
        total:
          $ref: '#/components/schemas/Money'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type:
            - string
            - 'null'
          format: date-time
      required:
        - id
        - projectId
        - version
        - status
        - items
        - subtotal
        - taxes
        - total
        - createdAt
    QuoteItemCreate:
      type: object
      properties:
        sku:
          type: string
        quantity:
          type: number
          format: double
          minimum: 0.000001
        unitPrice:
          type:
            - number
            - 'null'
          format: double
        discountPercent:
          type:
            - number
            - 'null'
          format: double
          minimum: 0
          maximum: 100
        discountAmount:
          type:
            - number
            - 'null'
          format: double
        notes:
          type:
            - string
            - 'null'
      required:
        - sku
        - quantity
    QuoteVersionSummary:
      type: object
      properties:
        versionId:
          type: string
          format: uuid
        itemsCount:
          type: integer
        subtotal:
          type: number
          format: double
        discount:
          type: number
          format: double
        tax:
          type: number
          format: double
        total:
          type: number
          format: double
      required:
        - versionId
        - itemsCount
        - subtotal
        - discount
        - tax
        - total
    Approval:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quoteId:
          type: string
          format: uuid
        step:
          type: string
          enum:
            - commercial_1
            - commercial_2
            - financial_1
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
        decidedBy:
          type:
            - string
            - 'null'
          format: uuid
        decidedAt:
          type:
            - string
            - 'null'
          format: date-time
        comments:
          type:
            - string
            - 'null'
      required:
        - id
        - quoteId
        - step
        - status
    ApprovalRequest:
      type: object
      properties:
        decision:
          type: string
          enum:
            - approved
            - rejected
        comment:
          type:
            - string
            - 'null'
      required:
        - decision
    ApprovalDecision:
      type: object
      properties:
        decision:
          type: string
          enum:
            - approved
            - rejected
        comment:
          type:
            - string
            - 'null'
      required:
        - decision
    WorkflowState:
      type: string
      enum:
        - draft
        - quoted
        - approval_pending
        - approved
        - sales_note_issued
        - work_order_issued
        - manufacturing
        - delivered
        - installed
        - closed
    WorkflowTransitionRequest:
      type: object
      properties:
        targetState:
          $ref: '#/components/schemas/WorkflowState'
        comment:
          type:
            - string
            - 'null'
      required:
        - targetState
    PriceAgreement:
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        priceListId:
          type: string
          format: uuid
        quoteId:
          type: string
          format: uuid
        effectiveAt:
          type: string
          format: date-time
      required:
        - projectId
        - priceListId
        - quoteId
        - effectiveAt
    SalesNote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        number:
          type:
            - string
            - 'null'
      required:
        - id
        - projectId
    WorkOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        number:
          type:
            - string
            - 'null'
      required:
        - id
        - projectId
    MeProfile:
      type: object
      properties:
        id:
          type: string
        email:
          type:
            - string
            - 'null'
          format: email
        name:
          type:
            - string
            - 'null'
        roles:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            type: string
      required:
        - id
        - roles
        - scopes
  responses:
    Problem:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: No encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    BadRequest:
      description: Solicitud inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Unauthorized:
      description: No autenticado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: Prohibido (RBAC)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Conflict:
      description: Conflicto / Regla de negocio
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnprocessableEntity:
      description: Error semántico
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Clients
    description: Endpoints para búsqueda y detalle de clientes.
  - name: Catalog
    description: 'Endpoints de catálogo de productos (SKU, descripción, UoM) para cotizar.'
  - name: PriceLists
    description: Gestión y consulta de listas de precio y su vigencia.
  - name: Projects
    description: Alta y consulta de proyectos con PriceList bloqueado (LOCK) y estado actual.
  - name: Quotes
    description: Creación y lectura de cotizaciones y sus versiones.
  - name: Approvals
    description: Flujo de aprobaciones comercial y financiera (2C + 1F) sobre cotizaciones.
  - name: Workflow
    description: Transiciones y guardias del workflow del proyecto.
  - name: SalesNotes
    description: Emisión y consulta de Notas de Venta (NV) derivadas de proyectos aprobados.
  - name: WorkOrders
    description: Emisión y consulta de Órdenes de Trabajo (OT) posteriores a NV.
  - name: Identity
    description: Información del usuario autenticado.
security:
  - bearerAuth: []
